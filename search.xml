<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>目录层级测试</title>
    <url>/test/</url>
    <content><![CDATA[<h1 id="11111111"><a href="#11111111" class="headerlink" title="11111111"></a>11111111</h1><span id="more"></span>

<h2 id="1111"><a href="#1111" class="headerlink" title="1111"></a>1111</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h3><p>放假啊咖啡机哈佛和按时发放嘎嘎法国ag</p>
<p>dgasgsdgdsgdsg</p>
<p>dsgsdgsdgsdgdsgsg</p>
<p>gdgdgdgsgs </p>
<p>三国时代</p>
<p>gsg s给s给sgs公司股东</p>
<p>山豆根山豆根施工队施工施工三个</p>
<p>三个是根深蒂固</p>
<p>三个</p>
<p>是g是</p>
<p>sgsdg 上市公司s三个数给商家店铺感觉我是个位数s</p>
<p>受到攻击时哦特高频用无色</p>
<p> 武松韬光养晦围殴有同感欧文斯 </p>
<p>个黑色韬光养晦预热后提供我</p>
<p>手机号给我送PPT规划二五以后我</p>
<p>感觉嘿嘿我通过用户我uyt tgjhewoyht </p>
<p>而后通过佛尔我讨厌何伟途有和我同样问题</p>
<h3 id="多个"><a href="#多个" class="headerlink" title="多个"></a>多个</h3><p>安徽你发i发哈立法会</p>
<p>放假啊咖啡机哈佛和按时发放嘎嘎法国ag</p>
<p>dgasgsdgdsgdsg</p>
<p>dsgsdgsdgsdgdsgsg</p>
<p>gdgdgdgsgs</p>
<p>三国时代</p>
<p>gsg s给s给sgs公司股东</p>
<p>山豆根山豆根施工队施工施工三个</p>
<p>三个是根深蒂固</p>
<p>三个</p>
<p>是g是</p>
<p>sgsdg 上市公司s三个数给商家店铺感觉我是个位数s</p>
<p>受到攻击时哦特高频用无色</p>
<p>武松韬光养晦围殴有同感欧文斯</p>
<p>个黑色韬光养晦预热后提供我</p>
<p>手机号给我送PPT规划二五以后我</p>
<p>感觉嘿嘿我通过用户我uyt tgjhewoyht</p>
<p>而后通过佛尔我讨厌何伟途有和我同样问题</p>
<h2 id="手动"><a href="#手动" class="headerlink" title="手动"></a>手动</h2><h3 id="2-1"><a href="#2-1" class="headerlink" title="2.1"></a>2.1</h3><p>safjhaifghagikf</p>
<p>放假啊咖啡机哈佛和按时发放嘎嘎法国ag</p>
<p>dgasgsdgdsgdsg</p>
<p>dsgsdgsdgsdgdsgsg</p>
<p>gdgdgdgsgs</p>
<p>三国时代</p>
<p>gsg s给s给sgs公司股东</p>
<p>山豆根山豆根施工队施工施工三个</p>
<p>三个是根深蒂固</p>
<p>三个</p>
<p>是g是</p>
<p>sgsdg 上市公司s三个数给商家店铺感觉我是个位数s</p>
<p>受到攻击时哦特高频用无色</p>
<p>武松韬光养晦围殴有同感欧文斯</p>
<p>个黑色韬光养晦预热后提供我</p>
<p>手机号给我送PPT规划二五以后我</p>
<p>感觉嘿嘿我通过用户我uyt tgjhewoyht</p>
<p>而后通过佛尔我讨厌何伟途有和我同样问题</p>
<h2 id="33333算法"><a href="#33333算法" class="headerlink" title="33333算法"></a>33333算法</h2><h3 id="杀疯"><a href="#杀疯" class="headerlink" title="杀疯"></a>杀疯</h3><p>按计划发i法国哈佛和</p>
<p>放假啊咖啡机哈佛和按时发放嘎嘎法国ag</p>
<p>dgasgsdgdsgdsg</p>
<p>dsgsdgsdgsdgdsgsg</p>
<p>gdgdgdgsgs</p>
<p>三国时代</p>
<p>gsg s给s给sgs公司股东</p>
<p>山豆根山豆根施工队施工施工三个</p>
<p>三个是根深蒂固</p>
<p>三个</p>
<p>是g是</p>
<p>sgsdg 上市公司s三个数给商家店铺感觉我是个位数s</p>
<p>受到攻击时哦特高频用无色</p>
<p>武松韬光养晦围殴有同感欧文斯</p>
<p>个黑色韬光养晦预热后提供我</p>
<p>手机号给我送PPT规划二五以后我</p>
<p>感觉嘿嘿我通过用户我uyt tgjhewoyht</p>
<p>而后通过佛尔我讨厌何伟途有和我同样问题</p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>daimayuan OJ div1 每日一题 103</title>
    <url>/tt/</url>
    <content><![CDATA[<h1 id="子串的最大差-（单调栈）"><a href="#子串的最大差-（单调栈）" class="headerlink" title="子串的最大差 （单调栈）"></a>子串的最大差 （单调栈）</h1><p>题意：定义序列的最大差为序列中最大数与最小数的差。比如 $(3,1,4,5,6)$ 的最大差为 $6−1=5$ , $(2,2)$ 的最大差为 $2−2=0$ 。定义一个序列的子串为该序列中连续的一段序列。给定一个长度为 $n$ 的数组 $a1,a2,…,an$ ,请求出这个序列的所有子串的最大差之和。</p>
<span id="more"></span>

<p>思路：将对序列中的所有子串求最大最小值转化为序列中每个成员对每段子串最大值和最小值的贡献度（其影响范围），由此可得每个数的贡献值为 $v[i]=a[i]*{(lma[i]+rma[i]+lma[i]*rma[i])-(lmi[i]+rmi[i]+lmi[i]*rmi[i])}$每个数的左右影响范围可以通过单调栈进行求解，即通过单调栈求出最近的大于或小于a[i]的值进而求出大小。</p>
<p>代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//#define mod 998244353</span></span><br><span class="line"><span class="comment">//const int inf = 0x3f3f3f3f;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mkp make_pair</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">ll ans, a[<span class="number">500005</span>];</span><br><span class="line">ll lma[<span class="number">500005</span>], rma[<span class="number">500005</span>], lmi[<span class="number">500005</span>], rmi[<span class="number">500005</span>];</span><br><span class="line">stack&lt;pair&lt;<span class="type">int</span>, ll&gt;&gt; st1, st2, st3, st4;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//printf(&quot;1#\n&quot;);</span></span><br><span class="line">        <span class="keyword">if</span> (st1.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;%d 11\n&quot;,i);</span></span><br><span class="line">            st1.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            lma[i] = (i - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;%d 12\n&quot;,i);</span></span><br><span class="line">            <span class="keyword">while</span> (st1.<span class="built_in">top</span>().second &lt;= a[i]) &#123;st1.<span class="built_in">pop</span>();<span class="keyword">if</span>(st1.<span class="built_in">size</span>()==<span class="number">0</span>) <span class="keyword">break</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span> (st1.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                lma[i] = (i - <span class="number">1</span>);</span><br><span class="line">                st1.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                lma[i] = (i - st1.<span class="built_in">top</span>().first - <span class="number">1</span>);</span><br><span class="line">                st1.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (st3.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;%d 21\n&quot;,i);</span></span><br><span class="line">            st3.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            lmi[i] = (i - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;%d 22\n&quot;,i);</span></span><br><span class="line">            <span class="keyword">while</span> (st3.<span class="built_in">top</span>().second &gt;= a[i]) &#123;st3.<span class="built_in">pop</span>();<span class="keyword">if</span>(st3.<span class="built_in">size</span>()==<span class="number">0</span>) <span class="keyword">break</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span> (st3.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                lmi[i] = (i - <span class="number">1</span>);</span><br><span class="line">                st3.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                lmi[i] = (i - st3.<span class="built_in">top</span>().first - <span class="number">1</span>);</span><br><span class="line">                st3.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//printf(&quot;2#\n&quot;);</span></span><br><span class="line">        <span class="keyword">if</span> (st2.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            st2.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            rma[i] = (n - i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (st2.<span class="built_in">top</span>().second &lt; a[i]) &#123;st2.<span class="built_in">pop</span>();<span class="keyword">if</span>(st2.<span class="built_in">size</span>()==<span class="number">0</span>) <span class="keyword">break</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span> (st2.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                rma[i] = (n - i);</span><br><span class="line">                st2.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                rma[i] = (st2.<span class="built_in">top</span>().first - i - <span class="number">1</span>);</span><br><span class="line">                st2.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (st4.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            st4.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            rmi[i] = (n - i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (st4.<span class="built_in">top</span>().second &gt; a[i]) &#123;st4.<span class="built_in">pop</span>();<span class="keyword">if</span>(st4.<span class="built_in">size</span>()==<span class="number">0</span>) <span class="keyword">break</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span> (st4.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                rmi[i] = (n - i);</span><br><span class="line">                st4.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                rmi[i] = (st4.<span class="built_in">top</span>().first - i - <span class="number">1</span>);</span><br><span class="line">                st4.<span class="built_in">push</span>(<span class="built_in">mkp</span>(i, a[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//for(int i=1;i&lt;=n;i++) printf(&quot;%d %d %d %d\n&quot;,lma[i],rma[i],lmi[i],rmi[i]);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans+=(lma[i]+rma[i]+lma[i]*rma[i]-lmi[i]-rmi[i]-lmi[i]*rmi[i])*a[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>创作类</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>题解</tag>
        <tag>daimayuanoj</tag>
      </tags>
  </entry>
</search>
